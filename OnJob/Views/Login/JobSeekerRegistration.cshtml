@model OnJobEntity.JobSeeker.User

@{
    ViewBag.Title = "JobSeekerRegistration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@if (@TempData["Message"] != null)
{
<script type="text/javascript">

     var x = '@TempData["Message"]';
    $(document).ready(function () {
        if ('@TempData["Message"]' == "Already Email Registraion!!") {
            toastr.error(x);
       }
        else {
            toastr.success(x);
        }
    });


</script>


}

<div class="container-login100">
    <div class="wrap-login100">
        @using (Html.BeginForm("JobSeekerRegistration", "Login"))
        {
            @Html.AntiForgeryToken()
           

            <span class="login100-form-title pb-5">
                Sign Up
            </span>
           
    <div class="wrap-input100 mb-3" data-validate="Valid name is required: johnny">

        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "input100", placeholder = "First Name" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <span class="lnr lnr-user"></span>
        </span>
    </div>

    <div class="wrap-input100 mb-3" data-validate="Valid name is required: smith">


        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "input100", placeholder = "Last Name" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <span class="lnr lnr-user"></span>
        </span>
    </div>

    <div class="wrap-input100 mb-3" data-validate="Valid email is required: ex@abc.xyz">

        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input100", placeholder = "Email" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <span class="lnr lnr-envelope"></span>
        </span>
    </div>

    <div class="wrap-input100 mb-3" data-validate="Password is required">


        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "input100", placeholder = "Password" } })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

        <span class="focus-input100"></span>
        <span class="symbol-input100">
            <span class="lnr lnr-lock"></span>
        </span>
    </div>

   

 

    <div class="recaptcha-cnt">
        <div class="form-group mt-2">
            <div class="g-recaptcha" data-sitekey="6Le0HZIUAAAAAGlN837KsF6nbXsjZ0KeU2q-TzY8" data-theme="light" data-type="image" data-size="normal"></div>
            <script type="text/javascript" src="https://www.google.com/recaptcha/api.js?render=onload&hl=en" async defer></script>
        </div>
    </div>

    <div class="container-login100-form-btn">
        <input type="submit" class="login100-form-btn" name="submit"  id="button" value="Sign Up">
    </div>
}

        <div class="text-center w-full pt-4">
            <span class="txt1">
                Already a member?
            </span>

            <a class="txt1 bo1 hov1" href="/Login/Login">
                Sign in now
            </a>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $("button").click(function () {
            $("").removeClass("field-validation-valid");
        });
    });
</script>